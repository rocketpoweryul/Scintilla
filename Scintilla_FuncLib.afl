// This is the Scintilla Project functional library
// Date created: 2023-12-30
// By: Michael Angelo Mustillo
// Amibroker 6.40.4 with Norgate data on Windows 11

// Purpose
// Library of functions that will be commonly used by the Scintilla project
// Meant as a TPT library 2.0, but without any of the intellectual property used from before
// All sources for algorithms, mathematical formulas, approaches, etc are to be referenced

//// Function Get_KMA_Trend_Gains
/*
Returns an array of percentage gains between violations of the KMA by the low-of-day
OUTPUT: Detected_gains
	Array of percentage gains
INPUT: 
	KMA_len: Scalar integer period length of the KMA to be implemented as an SMA
*/
function Get_KMA_Trend_Gains(KMA_len)
{
	// create the KMA array as a simple moving average
	KMA = MA( C, KMA_len );		// Create the KMA that cannot be breached
	
	// other arrays
	bi	= BarIndex();	// array that tells you the index of the bar from 0 to barcount -1
	end_of_chart = bi == BarCount -1 AND C > KMA;	// array that tells you it is the end of the chart
	
	// Find KMA_len period breaches for a stock
	// returns an array where any time there is a breach, the array value is true
	// also sets to zero for repeated violations
	KMA_vio = L < KMA;
	
	// calculates the gain in percent, since the last KMA violation
	// if statement is needed to avoid resetting gain on the day of the violation, so need to look back to 2nd most recent occurrence
	Possible_gain = IIf( KMA_vio, ( KMA / ValueWhen( KMA_vio, Ref(C,1), 2 ) - 1 ) * 100, ( KMA / ValueWhen( KMA_vio, Ref(C,1), 1 ) - 1 ) * 100 );

	// check gain once there is a violation or end of chart
	Detected_gain = IIf(( KMA_vio AND NOT Ref( KMA_vio, -1 )) OR end_of_chart, Possible_gain, 0);
	
	return Detected_gain;
}